name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
    tags: 
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
  unit: 
    runs-on: ubuntu-latest
    steps:  
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.18.0

      - name: Install dependencies
        run: npm ci
      - name: Run the tests
        run: npm run test

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      BACKEND_PATH: ./backend  

    steps:
      - name: Checkout frontend repo
        uses: actions/checkout@v5

      - name: Checkout backend repo
        uses: actions/checkout@v5
        with:
          repository: PDES-2025-Compra-tu-auto/backend
          path: backend
          ref: ${{ github.event_name == 'pull_request' && github.base_ref || github.ref_name }}

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
    
      - name: Bring up backend + db with docker-compose
        run: docker compose -f docker-e2e-compose.yml up --build -d

      - name: Wait for backend to be ready
        run: |
          for i in {1..90}; do
            if nc -z localhost 4000; then
              echo "Backend is up!"
              exit 0
            fi
            echo "Waiting for backend to start..."
            sleep 2
          done
          echo "Backend did not start in time."
          exit 1

      - name: Run Playwright tests
        run: npx playwright test --project=chromium --reporter=list --output=test-results
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-artifacts
          path: test-results
      - name: Tear down docker-compose
        if: always()
        run: docker compose -f docker-e2e-compose.yml down -v

  docker-build-push:
      runs-on: ubuntu-latest
      needs: ["build"]
      if: startsWith(github.ref, 'refs/tags/')
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build Docker image
          run: |
            docker build -t "${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${GITHUB_REF_NAME}" .
          shell: bash
        - name: Push Docker images
          run: |
            docker push "${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${GITHUB_REF_NAME}"
          shell: bash

        